version: "3.8"

services:
  db:
    container_name: db
    build: ./requirements/db/.
    volumes:
      - db-volume:/var/lib/mysql
    networks:
      - asteinsNetwork
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    expose:
      - 3306
    # restart: unless-stopped
    #healthcheck:
    #  test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    #  interval: 30s
    #  timeout: 10s
    #  retries: 3

#  wp:
#    container_name: wp
#    build: ./requirements/wp/.
#    depends_on:
#      - db
#    volumes:
#      - ./data/html:/var/www/html
#    networks:
#      - asteinsNetwork
#    env_file:
#      - .env
#    # restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost/wp-admin/install.php"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      
  nginx:
    container_name: nginx
    build: ./requirements/nginx/.
    #depends_on:
    #  - wp
    #  - db
    ports:
      - "443:443"
    #volumes:
    #  - ./data/html:/var/www/html
    networks:
      - asteinsNetwork
    env_file:
      - .env
    # restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  asteinsNetwork:
    name: asteinsNetwork
    driver: bridge

# Those are names of the volumes managed by docker
volumes:
  db-volume:
    name: db-volume
    driver_opts:
      type: none
      device: ./data/db-volume/
      o: bind
#  html: