version: "3.8"

services:
  db:
    container_name: db
    build: ./requirements/db/.
    volumes:
      - db-volume:/var/lib/mysql
    networks:
      - asteinsNetwork
    environment:
      DB_NAME       : $DB_NAME
      DB_ROOT_PSWD  : $DB_ROOT_PSWD
      DB_USER       : $DB_USER
      DB_USER_PSWD  : $DB_USER_PSWD
    expose:
      - 3306
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
  wp:
    container_name: wp
    build: ./requirements/wp/.
    depends_on:
      - db
    volumes:
      - wp-volume:/var/www/html
    networks:
      - asteinsNetwork
    environment:
      WP_DB_NAME          : $WP_DB_NAME
      WP_DB_USER          : $WP_DB_USER
      WP_DB_USER_PSWD     : $WP_DB_USER_PSWD
      WP_DB_HOST          : db:3306
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/wp-admin/install.php"]
      interval: 30s
      timeout: 10s
      retries: 3 
  nginx:
    container_name: nginx
    build: ./requirements/nginx/.
    depends_on:
      - db
      - wp
    ports:
      - "443:443"
    volumes:
      - wp-volume:/var/www/html
    networks:
      - asteinsNetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  asteinsNetwork:
    name: asteinsNetwork
    driver: bridge

# Those are names of the volumes managed by docker
volumes:
  db-volume:
    name: db-volume
    driver_opts:
      type: none
      device: ./data/db-volume/
      o: bind
  wp-volume:
    name: wp-volume
    driver_opts:
      type: none
      device: ./data/wp-volume/
      o: bind
